within(x , b<- b+y[c==a,]$d)
runApp("~/shiny/sample")
library(shiny)
runApp("~/shiny/sample")
runApp("~/shiny/sample")
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='ric-gis', token='0AC92870428168E01D4C86FB02D87A3F', secret='Li06B3nG3dhOzJuU6uNO9XfFRKsl+eDts0SZEzZ2')
library(shinyapps)
shinyapps::deployApp('~/shiny/sample')
library(shiny)
runApp('~/shiny/sample')
runGitHub( "ric-gis", "blueswen")
runApp("~/shiny/sample")
library(shiny)
runApp("~/shiny/sample")
library(shiny)
runApp("~/shiny/sample")
library(shiny)
runApp("~/shiny/yl-sample")
runApp("~/shiny/yl-sample")
runApp("~/shiny/yl-sample")
runApp("~/shiny/yl-sample")
runApp("~/shiny/yl-sample")
runApp("~/shiny/yl-sample")
libray(shiny)
library(shiny)
runApp('~/shiny/sample')
runApp('~/shiny/sample')
runApp('~/shiny/sample')
runApp('~/shiny/yl-sample')
library(shiny)
runApp('~/Shiny/sample')
library(shiny)
runApp("~/shiny/sample")
runApp("~/shiny/sample")
runApp("~/shiny/sample")
library(shiny)
runApp("~/shiny/sample")
runApp("~/shiny/sample")
runApp("~/shiny/sample")
runApp("~/shiny/sample")
runApp("~/shiny/sample")
runApp("~/shiny/yl-sample")
}
}
# merge the efficiency and multipliers
source('~/Documents/Ric-Gis/dea-crs.R')
library("lpSolve", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
source('~/Documents/Ric-Gis/dea-crs.R')
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
source('~/Documents/Ric-Gis/dea-crs.R')
library("XLConnect", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
source('~/Documents/Ric-Gis/dea-crs.R')
data <- read.csv("~/Documents/Ric-Gis/deadata.csv")
source('~/Documents/Ric-Gis/dea-crs-m.R')
source('~/Documents/Ric-Gis/dea-crs-m.R')
source('~/Documents/Ric-Gis/dea-crs.R')
source('~/.active-rstudio-document')
source('~/Documents/Ric-Gis/dea-crs.R')
View(spreadsheet)
View(spreadsheet)
View(spreadsheete)
View(spreadsheete)
source('~/Documents/Ric-Gis/dea-crs.R')
source('~/Documents/Ric-Gis/dea-crs.R')
f.dir
r.rhs
f.rhs
aux
f.obj
debugSource('~/Documents/Ric-Gis/dea-crs.R')
multipliers
efficiency
duals
f.obj
f.con
f.dir
f.rhs
f.obj
as.numeric(f.obj)
View(f.con)
f.dir
f.rhs
results.solution
result.solution
results
results[constraints]
results
results.x
results[x]
results[,x]
results
results$x
results$constraints
results$constraints
results$objective
results$solution
debugSource('~/Documents/Ric-Gis/dea-crs.R')
results$solution
debugSource('~/Documents/Ric-Gis/dea-crs.R')
results$solution
results$contrains
results$constraints
results$obj
results$objective
results$duals
clear
clear()
clean()
debugSource('~/Documents/Ric-Gis/dea-crs.R')
result
results
results$solution
results$duals
results$duals
results$duals$from
results$duals.from
results$duals.to
1.77*5
f.obj
results$constraints
weights
source('~/Documents/Ric-Gis/dea-crs.R')
weight
weights
effcrs
lambdas
library(shiny)
runApp("~/ror/sample")
runApp("~/shiny/sample")
runApp("~/shiny/sample")
library(rmongodb)
# your connection details will likely differ from these defaults
host <- "ds041228.mongolab.com:41228"
username <- "admin"
password <- "root"
db <- "ric-gis-sample"
#connect to mongo
#the create function has the following signature
#mongo.create(host="127.0.0.1", name="", username="", password="", db="admin", timeout=0L)
mongo <- mongo.create(host=host , db=db, username=username, password=password)
library(rmongodb)
# your connection details will likely differ from these defaults
host <- "ds041228.mongolab.com:41228"
username <- "admin"
password <- "root"
db <- "ric-gis-sample"
#connect to mongo
#the create function has the following signature
#mongo.create(host="127.0.0.1", name="", username="", password="", db="admin", timeout=0L)
mongo <- mongo.create(host=host , db=db, username=username, password=password)
library(rmongodb)
# your connection details will likely differ from these defaults
host <- "ds041228.mongolab.com:41228"
username <- "test"
password <- "test"
db <- "ric-gis-sample"
#connect to mongo
#the create function has the following signature
#mongo.create(host="127.0.0.1", name="", username="", password="", db="admin", timeout=0L)
mongo <- mongo.create(host=host , db=db, username=username, password=password)
library(rmongodb)
# your connection details will likely differ from these defaults
host <- "ds041228.mongolab.com:41228"
username <- "aaa"
password <- "aaa"
db <- "ric-gis-sample"
#connect to mongo
#the create function has the following signature
#mongo.create(host="127.0.0.1", name="", username="", password="", db="admin", timeout=0L)
mongo <- mongo.create(host=host , db=db, username=username, password=password)
library(rmongodb)
# your connection details will likely differ from these defaults
host <- "ds041228.mongolab.com:41228"
username <- "admin"
password <- "root"
db <- "ric-gis-sample"
#connect to mongo
#the create function has the following signature
#mongo.create(host="127.0.0.1", name="", username="", password="", db="admin", timeout=0L)
mongo <- mongo.create(host=host , db=db, username=username, password=password)
library(rmongodb)
# your connection details will likely differ from these defaults
host <- "ds041228.mongolab.com:41228"
username <- "admin"
password <- "root"
db <- "ric-gis-sample"
#connect to mongo
#the create function has the following signature
#mongo.create(host="127.0.0.1", name="", username="", password="", db="admin", timeout=0L)
mongo <- mongo.create(host=host , db=db, username=username, password=password)
runApp("~/shiny/sample")
library(devtools)
install_github(repo = "mongodb/mongo-ruby-driver")
install_github(repo = "mongosoup/rmongodb")
install_github(repo = "mongosoup/rmongodb")
runApp("~/shiny/sample")
3-4
a  = 10
a = "aa"
a
b = "cc"
a+b
a&b
a&&b
library("ctv")
install.packages('ctv')
library("ctv", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
a<-[1,3,4,6,88,10]
a<-c(1,3,4,6,88,10)
max(a)
min(a)
?max
sessioninfo()
sessionInfo()
d <- read.table('http://archive.ics.uci.edu/ml/machine-learning-databases/statlog/german/german.data',
stringsAsFactors=F,header=F)
d
head(d)
tail(d)
colnames(d) <- c('Status.of.existing.checking.account', 'Duration.in.month',
'Credit.history', 'Purpose', 'Credit.amount', 'Savings.account.bonds',
'Present.employment.since',
'Installment.rate.in.percentage.of.disposable.income',
'Personal.status.and.sex', 'Other.debtors.guarantors',
'Present.residence.since', 'Property', 'Age.in.years',
'Other.installment.plans', 'Housing',
'Number.of.existing.credits.at.this.bank', 'Job',
'Number.of.people.being.liable.to.provide.maintenance.for',
'Telephone', 'foreign.worker', 'Good.Loan')
d
head(d)
summary(d)
c(T,T,F,F) == c(T,F,T,F)
c(T,T,F,F) == c(T,F,T,F)
c(T,T,F,F) && c(T,F,T,F)
c(T,T,F,F) && c(F,F,T,F)
all.equal(c(T,T,F,F),c(F,F,T,F))
all.equal.list(c(T,T,F,F),c(F,F,T,F))
all.equal.list(c(T,T,F,F),c(F,F,T,T))
all.equal.list(c(F,T,F,F),c(F,F,T,T))
ls(a)
a<-function(a,b){a+b}
ls(a)
ls()
a<-1:10
a[10]
a[[10]
]
a[1[10]]
a[1[1]]
a[1[2]]
a[10[1]]
林顯達老師研究室
list(a='b')['a']
list(a='b')['a']
list(a='b')
list(a='b')['a']
list(a='b')[1]
list(a='b')[2]
list(a='b')[[2]]
d = data.frame(x=c(1,2,3), y=c('x','y','z'))
d = data.frame(x=c(1,2,3), y=c('x','y','z'))
d[,1]
d[,"x"]
d[,"y"]
d[,"z"]
d[1,]
d[2,]
d[3,]
s
d
uciCar <- read.table(      # Note: 1     'http://www.win-vector.com/dfiles/car.data.csv', 	# Note: 2     sep=',', 	# Note: 3     header=T 	# Note: 4 )
)
uciCar <- read.table(      # Note: 1     'http://www.win-vector.com/dfiles/car.data.csv', 	# Note: 2     sep=',', 	# Note: 3     header=T 	# Note: 4 )
uciCar <- read.table(    # Note: 1
'http://www.win-vector.com/dfiles/car.data.csv',   # Note: 2
sep=',',   # Note: 3
header=T   # Note: 4
)
uciCar
View(uciCar)
View(uciCar)
class(uciCar)
summary(uciCar)
dim(uciCar)
d <- read.table(paste('http://archive.ics.uci.edu/ml/','machine-learning-databases/statlog/german/german.data',sep=''),stringsAsFactors=F,header=F)
d <- read.table(paste('http://archive.ics.uci.edu/ml/','machine-learning-databases/statlog/german/german.data',sep=''),stringsAsFactors=F,header=F)
d
head(d)
View(d)
colnames(d) <- c('Status.of.existing.checking.account',                 'Duration.in.month',  'Credit.history', 'Purpose',                 'Credit.amount', 'Savings account/bonds',                 'Present.employment.since',                 'Installment.rate.in.percentage.of.disposable.income',                 'Personal.status.and.sex', 'Other.debtors/guarantors',                 'Present.residence.since', 'Property', 'Age.in.years',                 'Other.installment.plans', 'Housing',                 'Number.of.existing.credits.at.this.bank', 'Job',                 'Number.of.people.being.liable.to.provide.maintenance.for',                 'Telephone', 'foreign.worker', 'Good.Loan')d$Good.Loan <- as.factor(ifelse(d$Good.Loan==1,'GoodLoan','BadLoan'))
colnames(d) <- c('Status.of.existing.checking.account',                 'Duration.in.month',  'Credit.history', 'Purpose',                 'Credit.amount', 'Savings account/bonds',                 'Present.employment.since',                 'Installment.rate.in.percentage.of.disposable.income',                 'Personal.status.and.sex', 'Other.debtors/guarantors',                 'Present.residence.since', 'Property', 'Age.in.years',                 'Other.installment.plans', 'Housing',                 'Number.of.existing.credits.at.this.bank', 'Job',                 'Number.of.people.being.liable.to.provide.maintenance.for',                 'Telephone', 'foreign.worker', 'Good.Loan')
colnames(d) <- c('Status.of.existing.checking.account',                 'Duration.in.month',  'Credit.history', 'Purpose',                 'Credit.amount', 'Savings account/bonds',                 'Present.employment.since',                 'Installment.rate.in.percentage.of.disposable.income',                 'Personal.status.and.sex', 'Other.debtors/guarantors',                 'Present.residence.since', 'Property', 'Age.in.years',                 'Other.installment.plans', 'Housing',                 'Number.of.existing.credits.at.this.bank', 'Job',                 'Number.of.people.being.liable.to.provide.maintenance.for',                 'Telephone', 'foreign.worker', 'Good.Loan')
colnames(d) <- c('Status.of.existing.checking.account','Duration.in.month',  'Credit.history', 'Purpose','Credit.amount', 'Savings account/bonds','Present.employment.since','Installment.rate.in.percentage.of.disposable.income','Personal.status.and.sex', 'Other.debtors/guarantors','Present.residence.since', 'Property', 'Age.in.years','Other.installment.plans', 'Housing','Number.of.existing.credits.at.this.bank', 'Job','Number.of.people.being.liable.to.provide.maintenance.for','Telephone', 'foreign.worker', 'Good.Loan')
d
head(d)
for(i in 1:(dim(d))[2]) {                 # Note: 1     if(class(d[,i])=='character') {        d[,i] <- as.factor(as.character(mapping[d[,i]]))  	# Note: 2     }}
for(i in 1:(dim(d))[2]) {                 # Note: 1     if(class(d[,i])=='character') {        d[,i] <- as.factor(as.character(mapping[d[,i]]))  	# Note: 2     }}
d$Good.Loan <- as.factor(ifelse(d$Good.Loan==1,'GoodLoan','BadLoan'))
mapping <- list(    'A40'='car (new)',    'A41'='car (used)',    'A42'='furniture/equipment',    'A43'='radio/television',    'A44'='domestic appliances')
mapping <- list('A40'='car (new)','A41'='car (used)','A42'='furniture/equipment','A43'='radio/television','A44'='domestic appliances')
for(i in 1:(dim(d))[2]) {               # Note: 1
if(class(d[,i])=='character') {
d[,i] <- as.factor(as.character(mapping[d[,i]]))    # Note: 2
}
}
head(d)
View(d)
View(d)
summary(d$Purchase)
summary(d$Purpose)
summary(d$Purpose,d$Good.Loan)
summary(d$Purpose,d$Good.Loans)
summary(d$Purpose,d$Good.Loan)
d$Good.Loan
table(d$Purpose,d$Good.Loan)
clear()
clean
clear
d <- read.table(paste('http://archive.ics.uci.edu/ml/','machine-learning-databases/statlog/german/german.data',sep=''),stringsAsFactors=F,header=F)
d <- read.table(i_f,stringsAsFactors=F,header=F)
ls
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
colnames(d) <- c('Status.of.existing.checking.account',
'Duration.in.month',  'Credit.history', 'Purpose',
'Credit.amount', 'Savings account/bonds',
'Present.employment.since',
'Installment.rate.in.percentage.of.disposable.income',
'Installment.rate.in.percentage.of.disposable.income',
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
source('~/.active-rstudio-document')
print(i_f)
source('~/.active-rstudio-document') test
source('~/.active-rstudio-document test')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document -query max/min -files file1 file2 –out out.csv')
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document -query max/min -files file1 file2 –out out.csv')
parseArgs <- function(x) strsplit(sub("^-", "", x), "=")
argsDF <- as.data.frame(do.call("rbind", parseArgs(args)))
argsL <- as.list(as.character(argsDF$V2))
names(argsL) <- argsDF$V1
## Arg1 default
if(is.null(args$query)) {
## do something
}
## Arg2 default
if(is.null(args$files)) {
## do something
}
## Arg3 default
if(is.null(args$out)) {
## do something
}
}
Rscript hw1.r arg1 arg2 arg3
system("hw1.R -query")
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R -query')
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R') -query
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R') -query
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
Rscript
./'~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R'
.'~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R'
.~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R'
./Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R'
./Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R
./Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R
run('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
Run('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
runApp('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
system("hw1.R")
system("~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R -query a")
system("~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R -query a")
system("~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R -query a")
system("~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R -query a")
system("~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R -query a")
system("~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R -query a")
system("~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R -query a")
system("~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R -query a")
system("~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R -query a")
system("~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R -query a")
system("./run.sh")
Sys.getenv("USER")
sudo
system("~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R -query a")
system("~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R -query a")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
system("rscript ~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R -query a")
setwd("~/Documents/NCCU/1042/DSP/Homework1/Scripts")
system("hw1.R -query a")
system("Rscript hw1.R -query a")
Rscript hw1.R -query a"
Rscript hw1.R -query a
system("Rscript hw1.R -query max -files file1 file2 –out out.csv")
system("Rscript hw1.R -query max -files file1 file2 –out out.csv")
system("Rscript hw1.R -query max -files file1 file2 –out out.csv")
system("Rscript hw1.R -query max -files file1 file2 –out out.csv")
system("Rscript hw1.R -query max -files file1 file2 –out out.csv")
system("Rscript hw1.R -query max -files file1 file2 –out out.csv")
system("Rscript hw1.R -query=max -files=file1 –out=out.csv")
system("Rscript hw1.R -query='max' -files='file1' –out='out.csv'")
system("Rscript hw1.R --arg1=1 --arg2="output.txt" --arg3=TRUE")
system("Rscript hw1.R --arg1=1 --arg2='output.txt' --arg3=TRUE")
system("Rscript hw1.R --arg1=1 --arg2='output.txt' --arg3=TRUE")
system("Rscript hw1.R --arg1=1 --arg2='output.txt' --arg3=TRUE")
system("Rscript hw1.R -query max/min -files file1 file2 –out out.csv)
""
system("Rscript hw1.R -query max/min -files file1 file2 –out out.csv")
a <-c("-query"  "max/min" "-files"  "file1"   "file2"   "–out"   "out.csv")
a <-c("-query","max/min","-files","file1","file2","–out","out.csv")
a
parseArgs <- function(x) strsplit(sub("^--", "", x), "=")
argsDF <- as.data.frame(do.call("rbind", parseArgs(a)))
argsDF
x = parseArgs(a)
x
parseArgs <- function(x) strsplit(sub("^-", "", x), "=")
x = parseArgs(a)
x
argsL <- as.list(as.character(argsDF$V2))
argsL
parseArgs <- function(x) strsplit(sub("^-", "", x), "")
x = parseArgs(a)
x
parseArgs <- function(x) strsplit(sub("^-", x), " ")
x = parseArgs(a)
x
parseArgs <- function(x) strsplit(sub("^-","", x), " ")
x = parseArgs(a)
x
t <- function(args) {
if (length(args)>1) {
split.list <- strsplit( args[-1], '\\=' )  ## exclude "--args"
values <- llply( split.list, '[[', 2 )
names(values) <- laply( split.list, '[[', 1 )
values } else list()  ## the possible returns
}
t(a)
require(plyr)
library("plyr")
require("plyr")
require(plyr)
install.packages("plyr")
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
t(a)
a
detach("package:plyr", unload=TRUE)
source('~/.active-rstudio-document')
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
source('~/.active-rstudio-document')
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
source('~/.active-rstudio-document')
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
source('~/.active-rstudio-document')
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
source('~/.active-rstudio-document')
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
argsDF = data.frame()
hnames(argsDF) <- c("query","files","out")
names(argsDF) <- c("query","files","out")
argsDF = data.frame(query,files,out)
argsDF = data.frame(query=character(),files=character(),out=character())
argsDF
view(argsDF)
View(argsDF)
argsDF$query
c=c("--arg1=1","--arg2=output.txt","--arg3=TRUE"  )
parseArgs <- function(x) strsplit(sub("^--", "", x), "=")
argsDF <- as.data.frame(do.call("rbind", parseArgs(c)))
argsL <- as.list(as.character(argsDF$V2))
names(argsL) <- argsDF$V1
View(argsDF)
args$arg1
c
> name <- c("Joe", "Bob", "Vicky")
> age <- c("28", "26", "34")
> gender <- c("Male","Male","Female")
> data <- data.frame(name, age, gender)
name <- c("Joe", "Bob", "Vicky")
age <- c("28", "26", "34")
gender <- c("Male","Male","Female")
data <- data.frame(name, age, gender)
View(data)
data$name
argsDF <- data.frame(query<-c(),files<-c(),out<-c())
View(argsDF)
argsDF$query6
argsDF$query
aa <- c()
aa
aa <- c(aa,"x")
aa
aa <- c(aa,"x")
aa
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
source('~/Documents/NCCU/1042/DSP/Homework1/Scripts/hw1.R')
